[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "sphinx-test-reports"
version = "1.2.0"
description = "Sphinx extension for showing test results and test environment information inside sphinx documentations"
readme = "README.rst"
license = { text = "MIT" }
authors = [{ name = "team useblocks", email = "info@useblocks.com" }]
classifiers = [
  "Framework :: Sphinx",
  "Framework :: Sphinx :: Extension",
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Documentation",
]
keywords = ["sphinx", "documentation", "test-reports"]
requires-python = ">=3.9"
dependencies = ["sphinx>4.0", "lxml", "sphinx-needs>=1.0.1"]

[project.optional-dependencies]
test = ["pytest>=7.0", "pytest-xdist", "nox", "sphinxcontrib-plantuml", "sphinx_design"]
docs = [
  "sphinx==7",
  "sphinx-needs>=4",
  "sphinx-test-reports>=0.3.3",
  "sphinxcontrib-plantuml",
  "sphinx-design",
  "sphinx-immaterial",
  "pillow",
]

[dependency-groups]
dev = ["pre-commit~=3.0", "tox~=4.23", "tox-uv~=1.15"]

[tool.flit.module]
name = "sphinxcontrib"

[project.urls]
Homepage = "https://github.com/useblocks/sphinx-test-reports"
Repository = "https://github.com/useblocks/sphinx-test-reports.git"
Documentation = "https://sphinx-test-reports.readthedocs.io/en/latest/"
download-url = "http://pypi.python.org/pypi/sphinx-test-reports"

[tool.ruff.lint]
# TODO enable and fix commented rules
extend-select = [
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "FURB", # refurb (modernising code)
  "I",    # isort
  "ICN",  # flake8-import-conventions
  "ISC",  # flake8-implicit-str-concat
  "N",    # pep8-naming
  "PERF", # perflint (performance anti-patterns)
  "PGH",  # pygrep-hooks
  "PIE",  # flake8-pie
  # "PL",   # pylint
  # "PTH",  # flake8-use-pathlib
  # "RUF",  # Ruff-specific rules
  # "SIM",  # flake8-simplify
  "SLF", # private member access
  # "UP",   # pyupgrade
  # "T20",  # flake8-print
]

[tool.mypy]
files = "sphinxcontrib"
strict = true
show_error_codes = true
implicit_reexport = false
namespace_packages = true
disallow_any_generics = true
disallow_subclassing_any = true
# disallow_any_unimported = true
# disallow_any_explicit = true
# disallow_any_expr = true
# disallow_any_decorated = true
